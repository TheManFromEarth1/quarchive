#!/usr/bin/env python3

"""Generate extension manifest files for different browsers.

Chrome and Firefox have slightly different expectations about what should be in these files.

"""

import argparse
import json
from sys import stdout


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("browser", type=str, choices=["chrome", "firefox"])
    parser.add_argument("version", type=str)
    args = parser.parse_args()

    manifest = {
        "author": "Cal Paterson",
        "background": {"page": "background.html"},
        "description": 'Traditional "Web 2.0" social bookmarking, with small improvements',
        "icons": {"48": "48x48.png", "96": "96x96.png"},
        "homepage_url": "https://quarchive.com",
        "manifest_version": 2,
        "name": "Quarchive",
        "options_ui": {"page": "options.html"},
        "permissions": [
            "alarms",
            "bookmarks",
            "cookies",
            "https://quarchive.com/",
            "storage",
            "unlimitedStorage",
        ],
        "version": args.version,
    }

    if args.browser == "firefox":
        manifest["browser_specific_settings"] = {
            "gecko": {
                "id": "{ee416e00-528a-4b7b-a0d2-98bae198d30c}",
                # Setting for self-hosting
                # "update_url": ("https://quarchive.com/extension/gecko/updates.json"),
            }
        }
        manifest["options_ui"]["browser_style"] = True
    else:
        manifest["options_ui"]["chrome_style"] = True
        manifest["background"]["persistent"] = True

    json.dump(manifest, stdout, indent=4)


if __name__ == "__main__":
    main()
