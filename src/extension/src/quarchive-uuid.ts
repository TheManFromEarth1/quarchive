// This module is an attempt to reproduce the proposed randomUUID function from
// https://github.com/tc39/proposal-uuid

// Taken from MDN:
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random
//
// PRNG is satisfactory here as the UUIDs generated by this module will just be
// used for diagnostics and debugging
function getRandomIntInclusive(min, max) {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive
}

function randomBytes(n: number): Array<number> {
    return Array.from({length: n}, function(x, y) {
        return getRandomIntInclusive(0, 255);
    })}

function byteToHex(b: number): string {
    return b.toString(16).padStart(2, '0');
}

export function randomUUID(): string {
    let uuidBytes = randomBytes(16);

    // Set the version and the variant
    uuidBytes[6] = (uuidBytes[6] & 0x0f) | 0x40;
    uuidBytes[8] = (uuidBytes[8] & 0xbf) | 0x80;

    let uuidHex = uuidBytes.map(byteToHex);

    let characters = [
        ...uuidHex.slice(0, 4),
        '-',
        ...uuidHex.slice(4, 6),
        '-',
        ...uuidHex.slice(6, 8),
        '-',
        ...uuidHex.slice(8, 10),
        '-',
        ...uuidHex.slice(10, 16),
    ];

    return characters.join('');
}
